[
  {
    "path": "posts/2021-01-04-distill-resources/",
    "title": "Distill resources",
    "description": "Resources to improve the distill website",
    "author": [
      {
        "name": "Lefkios  Paikousis",
        "url": "https://www.linkedin.com/in/lefkios/"
      }
    ],
    "date": "2021-01-04",
    "categories": [],
    "contents": "\r\nSome resouces to use to improve my distill website\r\nDistill by Rstudio The official documentation and guide on how to create the blog\r\nDistill css defaults\r\nThis blog\r\nCheck out the code for this blog, also the _site.yml file(https://github.com/shamindras/ss_personal_distill_blog/blob/master/_site.yml).\r\nThanks Shamindra Shrotriya\r\nThomas Mock blog\r\nLot’s can be learned from this blog and its code.\r\nHis blog is here\r\nArticle Metadata\r\nFigures, twitter, google scloar..\r\nOther Metadata\r\nCitatios, footnote, tabke of contents, appendices, etc..\r\nImages\r\nPreview Photo by Austin Distel on Unsplash\r\n\r\n\r\n\r\n",
    "preview": "posts/2021-01-04-distill-resources/austin-distel-4r72LPFh4Ik-unsplash_small.jpg",
    "last_modified": "2021-01-04T14:12:26+03:00",
    "input_file": {}
  },
  {
    "path": "posts/2020-12-23-a-workflow-with-labelled-data/",
    "title": "A workflow with labelled data",
    "description": "I love labelled data.",
    "author": [
      {
        "name": "Lefkios  Paikousis",
        "url": "https://www.linkedin.com/in/lefkios/"
      }
    ],
    "date": "2020-12-23",
    "categories": [
      "labelled-data",
      "workflow",
      "labels",
      "ggplot2"
    ],
    "contents": "\r\n\r\nContents\r\nThe Libraries\r\nRead the data and data-dictionary\r\nFactors and order of the value labels\r\nPlots\r\nAxis titles\r\nFacet strip labels\r\nAxis text labels\r\n\r\n\r\nThe Libraries\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(labelled)\r\nlibrary(gtsummary)\r\nlibrary(readxl)\r\n\r\n\r\n\r\nI usually work with survey data that come in the form of a spreadsheet (usually from google forms).\r\nThe variable names are long and highly descriptive of what information the variable contains, but that long of a name, makes it very hard to work with while wrangling the dataset.\r\nWhat I want is to keep the original variable name as a label and rename the variable names with new names\r\nTo demontrate my workflow, I created a sample dataset to work with. You can download it from github\r\nThe dataset is stored as an excel file, and has two worksheets.\r\nIn the worksheet data you can see the raw data, and\r\nIn the worksheet labels you can find a sort of data dictionary\r\nIn the labels worksheet I keep a record of the original variable names as label and on the adjacent column, I type a short but readable column name for the variable.\r\nworksheet:labelsRead the data and data-dictionary\r\nLet’s read in the data\r\n\r\n\r\npath = here::here(\"Data\", \"sample_survey.xlsx\")\r\ndta <- readxl::read_xlsx(path)\r\n\r\nglimpse(dta)\r\n\r\n\r\nRows: 7\r\nColumns: 6\r\n$ id                                   <dbl> 1, 2, 3, 4, 5, 6, 7\r\n$ `Which restaurant have you visited?` <chr> \"Limassol\", \"Nicosia\", ~\r\n$ `I am happy with the greeting`       <chr> \"Agree\", \"Strongly disa~\r\n$ `I enjoyed the food`                 <chr> \"Neutral\", \"Neutral\", \"~\r\n$ `I am  satisfied with the cost`      <chr> \"Agree\", \"Strongly disa~\r\n$ `How satisfied you are overall`      <chr> \"Very satisfied\", \"Very~\r\n\r\nThe dataset contains 6 columns\r\nRead in the labels worksheet for the column dictionary\r\n\r\n\r\ndta_labels <- readxl::read_xlsx(path, sheet = \"labels\")\r\n\r\ndta_labels\r\n\r\n\r\n# A tibble: 6 x 2\r\n  label                              name      \r\n  <chr>                              <chr>     \r\n1 id                                 id        \r\n2 Which restaurant have you visited? restaurant\r\n3 I am happy with the greeting       greeting  \r\n4 I enjoyed the food                 food      \r\n5 I am  satisfied with the cost      cost      \r\n6 How satisfied you are overall      overall   \r\n\r\nNow,\r\nChange the column names of the dataset to the short names in the dictionary\r\nSet the labels of the columns via the labelled::var_label() function\r\nCreate a label_list object, which is a named list where the names of the list are variable names and the values of the list are the variable labels\r\nAlso, save a label_vector named vector with the same informationas the label_list\r\n\r\n\r\nnames(dta) <- dta_labels$name\r\n\r\nvar_label(dta) <- dta_labels$label\r\n\r\nlabels_list <- var_label(dta)\r\nlabels_vector <-  var_label(dta, unlist = TRUE)\r\n\r\nlabels_list\r\n\r\n\r\n$id\r\n[1] \"id\"\r\n\r\n$restaurant\r\n[1] \"Which restaurant have you visited?\"\r\n\r\n$greeting\r\n[1] \"I am happy with the greeting\"\r\n\r\n$food\r\n[1] \"I enjoyed the food\"\r\n\r\n$cost\r\n[1] \"I am  satisfied with the cost\"\r\n\r\n$overall\r\n[1] \"How satisfied you are overall\"\r\n\r\nHave a look at the dataset names now\r\n\r\n\r\nglimpse(dta)\r\n\r\n\r\nRows: 7\r\nColumns: 6\r\n$ id         <dbl> 1, 2, 3, 4, 5, 6, 7\r\n$ restaurant <chr> \"Limassol\", \"Nicosia\", \"Nicosia\", \"Larnaka\", \"Mal~\r\n$ greeting   <chr> \"Agree\", \"Strongly disagree\", \"Neutral\", \"Neutral~\r\n$ food       <chr> \"Neutral\", \"Neutral\", \"Strongly agree\", \"Neutral\"~\r\n$ cost       <chr> \"Agree\", \"Strongly disagree\", \"Agree\", \"Strongly ~\r\n$ overall    <chr> \"Very satisfied\", \"Very dissatisfied\", \"Neutral\",~\r\n\r\nNow its very easy to keep using the variable names in your code, but variable labels are rendered in the tables when using {gtsummary} for example.\r\n\r\n\r\ndta %>%\r\n  select(overall,restaurant) %>% \r\n  tbl_summary(\r\n    by  = restaurant\r\n  ) \r\n\r\n\r\n\r\nhtml {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\r\n}\r\n\r\n#caurxludij .gt_table {\r\n  display: table;\r\n  border-collapse: collapse;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: #333333;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  background-color: #FFFFFF;\r\n  width: auto;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #A8A8A8;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #A8A8A8;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n}\r\n\r\n#caurxludij .gt_heading {\r\n  background-color: #FFFFFF;\r\n  text-align: center;\r\n  border-bottom-color: #FFFFFF;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#caurxludij .gt_title {\r\n  color: #333333;\r\n  font-size: 125%;\r\n  font-weight: initial;\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n  border-bottom-color: #FFFFFF;\r\n  border-bottom-width: 0;\r\n}\r\n\r\n#caurxludij .gt_subtitle {\r\n  color: #333333;\r\n  font-size: 85%;\r\n  font-weight: initial;\r\n  padding-top: 0;\r\n  padding-bottom: 6px;\r\n  border-top-color: #FFFFFF;\r\n  border-top-width: 0;\r\n}\r\n\r\n#caurxludij .gt_bottom_border {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#caurxludij .gt_col_headings {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#caurxludij .gt_col_heading {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 6px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#caurxludij .gt_column_spanner_outer {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n}\r\n\r\n#caurxludij .gt_column_spanner_outer:first-child {\r\n  padding-left: 0;\r\n}\r\n\r\n#caurxludij .gt_column_spanner_outer:last-child {\r\n  padding-right: 0;\r\n}\r\n\r\n#caurxludij .gt_column_spanner {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  overflow-x: hidden;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n#caurxludij .gt_group_heading {\r\n  padding: 8px;\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#caurxludij .gt_empty_group_heading {\r\n  padding: 0.5px;\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#caurxludij .gt_from_md > :first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n#caurxludij .gt_from_md > :last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n#caurxludij .gt_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  margin: 10px;\r\n  border-top-style: solid;\r\n  border-top-width: 1px;\r\n  border-top-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#caurxludij .gt_stub {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-right-style: solid;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  padding-left: 12px;\r\n}\r\n\r\n#caurxludij .gt_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#caurxludij .gt_first_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#caurxludij .gt_grand_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#caurxludij .gt_first_grand_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: double;\r\n  border-top-width: 6px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#caurxludij .gt_striped {\r\n  background-color: rgba(128, 128, 128, 0.05);\r\n}\r\n\r\n#caurxludij .gt_table_body {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#caurxludij .gt_footnotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#caurxludij .gt_footnote {\r\n  margin: 0px;\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#caurxludij .gt_sourcenotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#caurxludij .gt_sourcenote {\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#caurxludij .gt_left {\r\n  text-align: left;\r\n}\r\n\r\n#caurxludij .gt_center {\r\n  text-align: center;\r\n}\r\n\r\n#caurxludij .gt_right {\r\n  text-align: right;\r\n  font-variant-numeric: tabular-nums;\r\n}\r\n\r\n#caurxludij .gt_font_normal {\r\n  font-weight: normal;\r\n}\r\n\r\n#caurxludij .gt_font_bold {\r\n  font-weight: bold;\r\n}\r\n\r\n#caurxludij .gt_font_italic {\r\n  font-style: italic;\r\n}\r\n\r\n#caurxludij .gt_super {\r\n  font-size: 65%;\r\n}\r\n\r\n#caurxludij .gt_footnote_marks {\r\n  font-style: italic;\r\n  font-weight: normal;\r\n  font-size: 65%;\r\n}\r\nCharacteristic\r\n      Larnaka, N = 11\r\n      Limassol, N = 21\r\n      Mall, N = 11\r\n      Nicosia, N = 21\r\n      Pafos, N = 11\r\n    How satisfied you are overall\r\n\r\n\r\n\r\n\r\nDissatisfied\r\n0 (0%)\r\n0 (0%)\r\n1 (100%)\r\n0 (0%)\r\n0 (0%)Neutral\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n1 (50%)\r\n1 (100%)Satisfied\r\n1 (100%)\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)Very dissatisfied\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n1 (50%)\r\n0 (0%)Very satisfied\r\n0 (0%)\r\n2 (100%)\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n        \r\n          1\r\n          \r\n           \r\n          n (%)\r\n          \r\n      \r\n    \r\n\r\nFactors and order of the value labels\r\nThe order of the satifaction levels in the previous table, is not the most appropriate. It should read from Very dissatisfied down to Very satisfied.\r\nOne way to accomplish this is to turn the variable into a factor. However, one problem arises now, where the label for the overall variable is gone. That is an inherent behaviour of dplyr::mutate() where it removes these attributes off of the variables that you manipulate.\r\nSee the overall title in the table below\r\n\r\n\r\n# change `overall` to factor\r\ndta <- \r\n  dta %>%\r\n  mutate(\r\n    overall  =  factor(overall,levels  = c(\"Very dissatisfied\", \"Dissatisfied\", \"Neutral\",\r\n                                           \"Satisfied\",\"Very satisfied\"))\r\n  ) \r\n\r\ndta %>% \r\n  select(overall,restaurant) %>% \r\n  tbl_summary(\r\n    by  = restaurant\r\n  ) \r\n\r\n\r\n\r\nhtml {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\r\n}\r\n\r\n#bwghlbaebg .gt_table {\r\n  display: table;\r\n  border-collapse: collapse;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: #333333;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  background-color: #FFFFFF;\r\n  width: auto;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #A8A8A8;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #A8A8A8;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n}\r\n\r\n#bwghlbaebg .gt_heading {\r\n  background-color: #FFFFFF;\r\n  text-align: center;\r\n  border-bottom-color: #FFFFFF;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#bwghlbaebg .gt_title {\r\n  color: #333333;\r\n  font-size: 125%;\r\n  font-weight: initial;\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n  border-bottom-color: #FFFFFF;\r\n  border-bottom-width: 0;\r\n}\r\n\r\n#bwghlbaebg .gt_subtitle {\r\n  color: #333333;\r\n  font-size: 85%;\r\n  font-weight: initial;\r\n  padding-top: 0;\r\n  padding-bottom: 6px;\r\n  border-top-color: #FFFFFF;\r\n  border-top-width: 0;\r\n}\r\n\r\n#bwghlbaebg .gt_bottom_border {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#bwghlbaebg .gt_col_headings {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#bwghlbaebg .gt_col_heading {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 6px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#bwghlbaebg .gt_column_spanner_outer {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n}\r\n\r\n#bwghlbaebg .gt_column_spanner_outer:first-child {\r\n  padding-left: 0;\r\n}\r\n\r\n#bwghlbaebg .gt_column_spanner_outer:last-child {\r\n  padding-right: 0;\r\n}\r\n\r\n#bwghlbaebg .gt_column_spanner {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  overflow-x: hidden;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n#bwghlbaebg .gt_group_heading {\r\n  padding: 8px;\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#bwghlbaebg .gt_empty_group_heading {\r\n  padding: 0.5px;\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#bwghlbaebg .gt_from_md > :first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n#bwghlbaebg .gt_from_md > :last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n#bwghlbaebg .gt_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  margin: 10px;\r\n  border-top-style: solid;\r\n  border-top-width: 1px;\r\n  border-top-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#bwghlbaebg .gt_stub {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-right-style: solid;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  padding-left: 12px;\r\n}\r\n\r\n#bwghlbaebg .gt_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#bwghlbaebg .gt_first_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#bwghlbaebg .gt_grand_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#bwghlbaebg .gt_first_grand_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: double;\r\n  border-top-width: 6px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#bwghlbaebg .gt_striped {\r\n  background-color: rgba(128, 128, 128, 0.05);\r\n}\r\n\r\n#bwghlbaebg .gt_table_body {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#bwghlbaebg .gt_footnotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#bwghlbaebg .gt_footnote {\r\n  margin: 0px;\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#bwghlbaebg .gt_sourcenotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#bwghlbaebg .gt_sourcenote {\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#bwghlbaebg .gt_left {\r\n  text-align: left;\r\n}\r\n\r\n#bwghlbaebg .gt_center {\r\n  text-align: center;\r\n}\r\n\r\n#bwghlbaebg .gt_right {\r\n  text-align: right;\r\n  font-variant-numeric: tabular-nums;\r\n}\r\n\r\n#bwghlbaebg .gt_font_normal {\r\n  font-weight: normal;\r\n}\r\n\r\n#bwghlbaebg .gt_font_bold {\r\n  font-weight: bold;\r\n}\r\n\r\n#bwghlbaebg .gt_font_italic {\r\n  font-style: italic;\r\n}\r\n\r\n#bwghlbaebg .gt_super {\r\n  font-size: 65%;\r\n}\r\n\r\n#bwghlbaebg .gt_footnote_marks {\r\n  font-style: italic;\r\n  font-weight: normal;\r\n  font-size: 65%;\r\n}\r\nCharacteristic\r\n      Larnaka, N = 11\r\n      Limassol, N = 21\r\n      Mall, N = 11\r\n      Nicosia, N = 21\r\n      Pafos, N = 11\r\n    overall\r\n\r\n\r\n\r\n\r\nVery dissatisfied\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n1 (50%)\r\n0 (0%)Dissatisfied\r\n0 (0%)\r\n0 (0%)\r\n1 (100%)\r\n0 (0%)\r\n0 (0%)Neutral\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n1 (50%)\r\n1 (100%)Satisfied\r\n1 (100%)\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)Very satisfied\r\n0 (0%)\r\n2 (100%)\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n        \r\n          1\r\n          \r\n           \r\n          n (%)\r\n          \r\n      \r\n    \r\n\r\nYou can easily solve this, using the labelled::set_variable_names() function. This function can be used in the dplyr chain since it takes a data argument.\r\nWhat you need to use is the labels_list we have saved before and pass it in the .labels argument of the set_variable_names()\r\n\r\n\r\ndta <- \r\n  dta %>%\r\n  set_variable_labels(.labels=labels_list)  #After mutating, the label information of the `overall` variable is gone.\r\n\r\ndta %>% \r\n  select(overall,restaurant) %>% \r\n  tbl_summary(\r\n    by  = restaurant\r\n  ) \r\n\r\n\r\n\r\nhtml {\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\r\n}\r\n\r\n#akhoxgewag .gt_table {\r\n  display: table;\r\n  border-collapse: collapse;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  color: #333333;\r\n  font-size: 16px;\r\n  font-weight: normal;\r\n  font-style: normal;\r\n  background-color: #FFFFFF;\r\n  width: auto;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #A8A8A8;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #A8A8A8;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n}\r\n\r\n#akhoxgewag .gt_heading {\r\n  background-color: #FFFFFF;\r\n  text-align: center;\r\n  border-bottom-color: #FFFFFF;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#akhoxgewag .gt_title {\r\n  color: #333333;\r\n  font-size: 125%;\r\n  font-weight: initial;\r\n  padding-top: 4px;\r\n  padding-bottom: 4px;\r\n  border-bottom-color: #FFFFFF;\r\n  border-bottom-width: 0;\r\n}\r\n\r\n#akhoxgewag .gt_subtitle {\r\n  color: #333333;\r\n  font-size: 85%;\r\n  font-weight: initial;\r\n  padding-top: 0;\r\n  padding-bottom: 6px;\r\n  border-top-color: #FFFFFF;\r\n  border-top-width: 0;\r\n}\r\n\r\n#akhoxgewag .gt_bottom_border {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#akhoxgewag .gt_col_headings {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#akhoxgewag .gt_col_heading {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 6px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#akhoxgewag .gt_column_spanner_outer {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: normal;\r\n  text-transform: inherit;\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n}\r\n\r\n#akhoxgewag .gt_column_spanner_outer:first-child {\r\n  padding-left: 0;\r\n}\r\n\r\n#akhoxgewag .gt_column_spanner_outer:last-child {\r\n  padding-right: 0;\r\n}\r\n\r\n#akhoxgewag .gt_column_spanner {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: bottom;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n  overflow-x: hidden;\r\n  display: inline-block;\r\n  width: 100%;\r\n}\r\n\r\n#akhoxgewag .gt_group_heading {\r\n  padding: 8px;\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#akhoxgewag .gt_empty_group_heading {\r\n  padding: 0.5px;\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  vertical-align: middle;\r\n}\r\n\r\n#akhoxgewag .gt_from_md > :first-child {\r\n  margin-top: 0;\r\n}\r\n\r\n#akhoxgewag .gt_from_md > :last-child {\r\n  margin-bottom: 0;\r\n}\r\n\r\n#akhoxgewag .gt_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  margin: 10px;\r\n  border-top-style: solid;\r\n  border-top-width: 1px;\r\n  border-top-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 1px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 1px;\r\n  border-right-color: #D3D3D3;\r\n  vertical-align: middle;\r\n  overflow-x: hidden;\r\n}\r\n\r\n#akhoxgewag .gt_stub {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  font-size: 100%;\r\n  font-weight: initial;\r\n  text-transform: inherit;\r\n  border-right-style: solid;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n  padding-left: 12px;\r\n}\r\n\r\n#akhoxgewag .gt_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#akhoxgewag .gt_first_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#akhoxgewag .gt_grand_summary_row {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  text-transform: inherit;\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n}\r\n\r\n#akhoxgewag .gt_first_grand_summary_row {\r\n  padding-top: 8px;\r\n  padding-bottom: 8px;\r\n  padding-left: 5px;\r\n  padding-right: 5px;\r\n  border-top-style: double;\r\n  border-top-width: 6px;\r\n  border-top-color: #D3D3D3;\r\n}\r\n\r\n#akhoxgewag .gt_striped {\r\n  background-color: rgba(128, 128, 128, 0.05);\r\n}\r\n\r\n#akhoxgewag .gt_table_body {\r\n  border-top-style: solid;\r\n  border-top-width: 2px;\r\n  border-top-color: #D3D3D3;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n}\r\n\r\n#akhoxgewag .gt_footnotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#akhoxgewag .gt_footnote {\r\n  margin: 0px;\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#akhoxgewag .gt_sourcenotes {\r\n  color: #333333;\r\n  background-color: #FFFFFF;\r\n  border-bottom-style: none;\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: #D3D3D3;\r\n  border-left-style: none;\r\n  border-left-width: 2px;\r\n  border-left-color: #D3D3D3;\r\n  border-right-style: none;\r\n  border-right-width: 2px;\r\n  border-right-color: #D3D3D3;\r\n}\r\n\r\n#akhoxgewag .gt_sourcenote {\r\n  font-size: 90%;\r\n  padding: 4px;\r\n}\r\n\r\n#akhoxgewag .gt_left {\r\n  text-align: left;\r\n}\r\n\r\n#akhoxgewag .gt_center {\r\n  text-align: center;\r\n}\r\n\r\n#akhoxgewag .gt_right {\r\n  text-align: right;\r\n  font-variant-numeric: tabular-nums;\r\n}\r\n\r\n#akhoxgewag .gt_font_normal {\r\n  font-weight: normal;\r\n}\r\n\r\n#akhoxgewag .gt_font_bold {\r\n  font-weight: bold;\r\n}\r\n\r\n#akhoxgewag .gt_font_italic {\r\n  font-style: italic;\r\n}\r\n\r\n#akhoxgewag .gt_super {\r\n  font-size: 65%;\r\n}\r\n\r\n#akhoxgewag .gt_footnote_marks {\r\n  font-style: italic;\r\n  font-weight: normal;\r\n  font-size: 65%;\r\n}\r\nCharacteristic\r\n      Larnaka, N = 11\r\n      Limassol, N = 21\r\n      Mall, N = 11\r\n      Nicosia, N = 21\r\n      Pafos, N = 11\r\n    How satisfied you are overall\r\n\r\n\r\n\r\n\r\nVery dissatisfied\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n1 (50%)\r\n0 (0%)Dissatisfied\r\n0 (0%)\r\n0 (0%)\r\n1 (100%)\r\n0 (0%)\r\n0 (0%)Neutral\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n1 (50%)\r\n1 (100%)Satisfied\r\n1 (100%)\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)Very satisfied\r\n0 (0%)\r\n2 (100%)\r\n0 (0%)\r\n0 (0%)\r\n0 (0%)\r\n        \r\n          1\r\n          \r\n           \r\n          n (%)\r\n          \r\n      \r\n    \r\n\r\nImportant to say that:\r\nUsing the labels_list object we do not worry about the order of the variables as the matchingis done on the names of the variables.\r\nThere is no problem if the data has more variables than what the labels_list contains as long as all the variables contained in the labels_list are also in the dataset we want to label\r\nPlots\r\nAxis titles\r\nHere, we want to utilise the labels we stored on the labels_list when defining axes title labels.\r\nHere is the plot with the default varible names as the xes title labels\r\n\r\n\r\nplot_overall <- \r\n  dta %>%\r\n  count(overall) %>% \r\n  ggplot(aes(overall, n))+\r\n  geom_col()+\r\n  coord_flip()\r\n\r\nplot_overall\r\n\r\n\r\n\r\n\r\nNow, you don;t need to type in manually the axis title label. Just use the labels_list\r\n\r\n\r\nplot_overall  +\r\n  labs(x=labels_list[[\"overall\"]])\r\n\r\n\r\n\r\n\r\nFacet strip labels\r\nHere, we will utilise the labels_vector to show descriptive labels in the facet_warp strip texts\r\nUsually, with these kind of questions(a series of likert scale questions), I want to plot many questions at the same plot. One way to do this is by tranforming all the data into a long format and get the counts (or proportions) of ech response to each question in a long table. Then we plot it by faceting the graph by the question.\r\n\r\n\r\nfaceted_plot <- \r\n  dta %>%\r\n  select(greeting, food, cost) %>% \r\n  pivot_longer(everything(), \r\n               names_to = \"attribute\",\r\n               values_to= \"rating\") %>% \r\n  count(attribute,  rating) %>% \r\n  mutate(\r\n    rating = factor(rating, c(\"Strongly agree\", \"Agree\", \"Neutral\", \"Disagree\", \"Strongly disagree\"))\r\n  ) %>% \r\n  ggplot(aes(rating, n))+\r\n  geom_col()+\r\n  coord_flip()+\r\n  facet_wrap(~attribute)\r\n\r\nfaceted_plot\r\n\r\n\r\n\r\n\r\nWhen using facet wrap in ggplots we get the values of the facet column in the strip text. However, since the facet column is actually a column that holds the question, it would be great to have the long label in the facet strip instead of the short name.\r\nThankfully we don’t have to do this manually. We can utilise the label_vector we saved earlier, and the underated ggplot function as_labeller (or sometimes the labeller function).You can read more about as_labeller and labeller for many more (and more usufull) use cases.\r\n\r\n\r\nfaceted_plot+\r\n  facet_wrap(~attribute,labeller = as_labeller(labels_vector))\r\n\r\n\r\n\r\n\r\nAxis text labels\r\nHere we will change how the levels in the axis ticks are displayed.\r\nIm my workflow, very often I need to plot proportions (or other summary statistic) of many items in the survey. Let’s assume we need to plot the proportion of respondents who answered positively ie.. Strongly agree or Agree in the rating questions greeting, food and cost.\r\nOne way of doing this:\r\n-1. Gather all rating questions (lets call them attributes) into a long format table with 2 columns - attribute and the rating for that attribute. -2. Indicate if the rating is positive ie. Agree/ Strongly agree -3. Count tne occurrences of positive rating\r\n\r\n\r\n# Table of good rating percentages\r\n\r\ntbl_pct <- \r\n  dta %>% \r\n  select(greeting, food, cost) %>% \r\n  # step 1\r\n  pivot_longer(everything(), \r\n               names_to = \"attribute\",\r\n               values_to= \"rating\") %>% \r\n  # 2. If Agree/strongly agree then `1` or `0`\r\n  mutate(rating  =  if_else(rating %in% c(\"Agree\",\"Strongly agree\"),1,  0)) %>% \r\n  # 3.Count the occurrences andget proportion\r\n  count(attribute, rating) %>% \r\n  group_by(attribute) %>% \r\n  mutate(pct = n/ sum(n)) \r\n\r\n#the plot\r\nplot_pct <- \r\n  tbl_pct %>% \r\n  # keep only the `1`s i.e. the proportion of agree/sstrongly agree\r\n  filter(rating ==1) %>% \r\n  ggplot(aes(attribute, pct))+\r\n  geom_col()\r\n\r\nplot_pct\r\n\r\n\r\n\r\n\r\nNow, we need to change the cost, food and greeting with appropriate text\r\nI usually use the scale_*_discrete function. There you can define the labels as a named list or a named vector\r\n\r\n\r\nplot_pct+\r\n  scale_x_discrete(labels = labels_list) # or labels_vector. Both will work\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2020-12-23-a-workflow-with-labelled-data/a-workflow-with-labelled-data_files/figure-html5/unnamed-chunk-9-1.png",
    "last_modified": "2021-10-17T12:15:17+03:00",
    "input_file": {},
    "preview_width": 1248,
    "preview_height": 768
  },
  {
    "path": "posts/2019-05-10-standardised-mortality-ratio/",
    "title": "Standardised Mortality Ratio",
    "description": "Calculation  of the SMR and and confidence interval",
    "author": [
      {
        "name": "Lefkios  Paikousis",
        "url": "https://www.linkedin.com/in/lefkios/"
      }
    ],
    "date": "2019-05-10",
    "categories": [
      "purrr",
      "regex",
      "excel",
      "rowwise"
    ],
    "contents": "\r\n\r\nContents\r\nWhat you can learn\r\nThe SMR\r\nRead files\r\nAggregate\r\nThe Confidence Interval\r\n\r\nThis is a reminder to myself (and to whoever finds this usefull) on the calculation of:\r\nthe Standardised Mortality Ratio (SMR)\r\nThe Confidence Interval of the SMR\r\nWhat you can learn\r\nWhat you can learn in this reminder\r\nSome use of regular expressions\r\ncreating functions and use them to avoid repeat myself\r\nRead (multiple) excel data into R\r\nFunction programming basics using the package purrr, intro, usefull\r\nThe rowwise function\r\nlist.files function and the set_names from purrr to make it easy to map the files into functions and keep a record of what comes from\r\nThe SMR\r\nThe SMR is calculated as the ratio of observed hospital mortality over predicted hospital mortality.\r\nI have data on ~1000 patients of the iCU and the following info:\r\nSAPS II score\r\nICU mortality (death/alive)\r\nThe data are in sepate excel workbooks named 2012.xlsx, 2013.xlsx etc.. until 2017, in the folder “ECDC data” in my working directory (my project)\r\nRead files\r\n\r\n\r\nlibrary(tidyverse)\r\nlibrary(readxl)\r\n\r\n# create a vector of the file names\r\nlist_of_files = \r\n  list.files(path = \"ECDC-data\", pattern = \".xlsx$\", full.names = TRUE) %>% \r\n  # name the vectors. It will be usefull to map the names to the read_xlsx function to get all data at once (purrr magic..)\r\n  set_names()\r\n\r\n\r\n# Map the file names to the readxl:: read_xlsx function to read all excel files and once. \r\n# Combine all the workbooks into a dataframe. \r\n# Also, capture the filename as an `id` variable in the dataframe\r\n\r\nall_data = \r\nmap_df( list_of_files,\r\n        ~ readxl::read_excel(path = .,\r\n                             # get some columns only (i have a lot)\r\n                             range = readxl::cell_cols(\"A:M\")),\r\n        .id = \"dataset\") %>% \r\n  #get the year from the dataset name - use some regular expressions\r\n  mutate(year = str_extract(dataset, pattern =\"[0-9]+\" )) %>% \r\n  # Do some cleaning \r\n  janitor::clean_names() %>% # the column names\r\n  # remove no saps score and no info on death\r\n  filter(!is.na(saps_ii),\r\n         !is.na(outcome_at_icu_discharge)) %>% \r\n  mutate(death = if_else(outcome_at_icu_discharge == \"Alive\", 0, 1)) %>% \r\n  # Select relevant variables only\r\n  select(year,death, saps_ii, type_of_admision) \r\n\r\n\r\n\r\nHere is a bit of an output\r\n\r\n\r\nall_data %>% \r\n  head(10) %>% \r\n  knitr::kable()\r\n\r\n\r\nyear\r\ndeath\r\nsaps_ii\r\ntype_of_admision\r\n2012\r\n0\r\n49\r\nmedical\r\n2012\r\n0\r\n24\r\nUnschedule surgical\r\n2012\r\n0\r\n84\r\nmedical\r\n2012\r\n0\r\n50\r\nmedical\r\n2012\r\n0\r\n12\r\nmedical\r\n2012\r\n1\r\n64\r\nmedical\r\n2012\r\n0\r\n31\r\nUnschedule surgical\r\n2012\r\n0\r\n35\r\nmedical\r\n2012\r\n0\r\n63\r\nmedical\r\n2012\r\n0\r\n26\r\nmedical\r\n\r\nAggregate\r\nLets aggregate by year, the observed mortality, and the median SAPS II score\r\n\r\n\r\n  all_data_aggr = \r\n  all_data %>% \r\n    group_by(year) %>% \r\n    summarise(n = n(),\r\n              obs_mortality = sum(death),\r\n              mortality_rate = mean(death),\r\n              # I get the median SAPS score\r\n              med_saps = median(saps_ii)\r\n              ) \r\n\r\n  all_data_aggr %>% knitr::kable()\r\n\r\n\r\nyear\r\nn\r\nobs_mortality\r\nmortality_rate\r\nmed_saps\r\n2012\r\n144\r\n26\r\n0.1805556\r\n48\r\n2013\r\n165\r\n33\r\n0.2000000\r\n47\r\n2014\r\n159\r\n28\r\n0.1761006\r\n48\r\n2015\r\n198\r\n41\r\n0.2070707\r\n49\r\n2016\r\n184\r\n32\r\n0.1739130\r\n60\r\n2017\r\n216\r\n47\r\n0.2175926\r\n57\r\n\r\nNow I need to calculate the predicted mortality by year.\r\nThe predicted mortality is derived from the SAPS II score as follows:\r\n\\(logit = -7.7631 + 0.0737*Score + 0.9971*ln(Score+1)\\)\r\nand then\r\n\\(Mortality = \\frac{e^{logit}}{1+e^{logit}}\\)\r\nHere I need a function that has the saps II score as an input and returns the predicted mortality\r\n\r\n\r\npredict_mortality = function(score){\r\n  logit = -7.7631 + 0.0737 * score + 0.9971 * log(score+1)\r\n  mortality = exp(logit)/ (1+exp(logit))\r\n  return(mortality)\r\n}\r\n\r\n\r\n\r\nNow lets use our function predict_mortality to calculate the predicted mortality out of the SAPS II score\r\n\r\n\r\n  smr_table = \r\n  all_data_aggr %>% \r\n    mutate(pred_mortality_rate = predict_mortality(med_saps),\r\n           # get expecte counts of deaths\r\n           pred_mortality = pred_mortality_rate * n,\r\n           # The SMR \r\n           smr = obs_mortality/ pred_mortality) \r\n\r\n  #Have  a look\r\n  smr_table %>% knitr::kable(digits = 2)\r\n\r\n\r\nyear\r\nn\r\nobs_mortality\r\nmortality_rate\r\nmed_saps\r\npred_mortality_rate\r\npred_mortality\r\nsmr\r\n2012\r\n144\r\n26\r\n0.18\r\n48\r\n0.41\r\n59.70\r\n0.44\r\n2013\r\n165\r\n33\r\n0.20\r\n47\r\n0.39\r\n64.67\r\n0.51\r\n2014\r\n159\r\n28\r\n0.18\r\n48\r\n0.41\r\n65.92\r\n0.42\r\n2015\r\n198\r\n41\r\n0.21\r\n49\r\n0.44\r\n86.63\r\n0.47\r\n2016\r\n184\r\n32\r\n0.17\r\n60\r\n0.68\r\n125.28\r\n0.26\r\n2017\r\n216\r\n47\r\n0.22\r\n57\r\n0.62\r\n133.76\r\n0.35\r\n\r\nThe Confidence Interval\r\nAn approximate 95% confidence interval (CI) for the SMR was calculated by using the method proposed by Vandenbroucke JP. A shortcut method for calculating the 95 percent confidence interval of the standardized mortality ratio. (Letter). Am J Epidemiol 1982; 115:303-4.\r\nI found the formulas of all possible CI calculations for the SMR here. It is the documentation of the this and this online calculators\r\nI tried out a few formulas in the documentation, specifically the ones that are called approximations\r\nI haven’t tried the Exact Tests calculations - I think they need more programming + I couldn’t figure out how I am supposed to do the iterative process. Perhaps its easy and don’t have time to think about it :)\r\nWell i tried this approximation by Vanderbroucke\r\n\r\nBeware that the \\(\\sqrt(α)\\) refers to the observed mortality and the \\(λ\\) to the predicted mortality. DO NOT confuse with the \\(α\\) of the Z score (i.e. the 1.96)\r\nSo I created this function, that reads the observed and predicted mortality (actual counts) and returns a vector of 2 values. The 1st is the lower limit, and the 2nd the upper limit\r\n\r\n\r\nsmr_conf =  function(observed, predicted){\r\n  \r\n  lower = ((sqrt(observed) - 1.96*0.5)^2)/ predicted\r\n  upper = ((sqrt(observed) + 1.96*0.5)^2)/ predicted\r\n  \r\n  return(c(lower, upper))\r\n  \r\n}\r\n\r\n\r\n\r\nNow lets use the smr_table we calculated earlier\r\nNOTE HERE the use of rowwise function of dplyr\r\nThe rowwise is needed since the inputs to the the function are taken rowwise\r\n\r\n\r\nsmr_table %>% \r\n  rowwise() %>% \r\n  mutate( lower_95 = smr_conf(obs_mortality, pred_mortality)[1],\r\n          upper_95 = smr_conf(obs_mortality, pred_mortality)[2]) %>% \r\n  knitr::kable(digits = 2)\r\n\r\n\r\nyear\r\nn\r\nobs_mortality\r\nmortality_rate\r\nmed_saps\r\npred_mortality_rate\r\npred_mortality\r\nsmr\r\nlower_95\r\nupper_95\r\n2012\r\n144\r\n26\r\n0.18\r\n48\r\n0.41\r\n59.70\r\n0.44\r\n0.28\r\n0.62\r\n2013\r\n165\r\n33\r\n0.20\r\n47\r\n0.39\r\n64.67\r\n0.51\r\n0.35\r\n0.70\r\n2014\r\n159\r\n28\r\n0.18\r\n48\r\n0.41\r\n65.92\r\n0.42\r\n0.28\r\n0.60\r\n2015\r\n198\r\n41\r\n0.21\r\n49\r\n0.44\r\n86.63\r\n0.47\r\n0.34\r\n0.63\r\n2016\r\n184\r\n32\r\n0.17\r\n60\r\n0.68\r\n125.28\r\n0.26\r\n0.17\r\n0.35\r\n2017\r\n216\r\n47\r\n0.22\r\n57\r\n0.62\r\n133.76\r\n0.35\r\n0.26\r\n0.46\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-03T21:26:28+03:00",
    "input_file": {}
  }
]
